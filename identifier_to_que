#!/usr/local/bin/perl
# FreeBSD Locals Only
###############################################################
# archive.org identifier metadata html scrape entire collection

# cursor api allows stepped requests from the server to 
# get around only serving 10k identifier requests at a time
# each raw dump named after count

# collection example: americana
my ($collection) = @ARGV;
if ( not defined $collection ) { die "usage: ARG1 collection from archive.org"; }

my $url='https://archive.org/services/search/v1/scrape?debug=false&total_only=false&count=10000&fields=identifier&q=collection%3A('.$collection.')%20';

my $count = 0;
get($url, $count);

open(my $tfh, '<', '0');
my @lines = readline $tfh; 
close $tfh; chomp @lines;

my $cursor = @lines[0];
$cursor =~ s?.*\"cursor\":\"??;
$cursor =~ s?".*??;

my $total = @lines[0];
my $total =~ s?.*","total":??;
$total =~ s?}??;
my $reps = $total / 10000;

$count++;
$reps++;
while ($count < $reps)
{
	print "$count $cursor\n";
	my $iurl = 'https://archive.org/services/search/v1/scrape?debug=false&total_only=false&count=10000&fields=identifier&q=collection%3A('.$collection.')%20&cursor='.$cursor;
	get($iurl, $count);
	
# SUBS #####################################################
sub get
{
	my ($i, $count) = @_;
	my $response = $UA->get($i, ':content_file'=>"$count");
}

# FETCH IDENIFIERS ################################
while [ $count -lt $reps ]
do
	printf "$count $cursor\n";
	iurl='https://archive.org/services/search/v1/scrape?debug=false&total_only=false&count=10000&fields=identifier&q=collection%3A('$collection')%20&cursor='$cursor;
	fetch -o $count $iurl;
	cursor=$( sed 's/.*"cursor":"//' $count | sed 's/","previous.*//')
	((count++));
done
# SANITIZE IDENTIFIERS #############################
((count--)); # remove trailing ++
for ((file=0; file<=$count; file++))
do
	sed 's/.*\[//' $file | sed 's/\].*//' | sed 's/"identifier"//g' | sed 's/[{}":]//g' | tr , '\n' >> tmp;
	sed 's|^|https://archive.org/download/|' tmp > que;
	printf "$file sanitized\n"; 
done
rm tmp;
# FETCH METADATA ###################################
while read -r line
do
	name=$( echo $line | sed 's|.*download/|| )
	fetch -o dump/$name $line;
	sleep 1;
done < "que"
